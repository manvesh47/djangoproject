from django.shortcuts import render , HttpResponse
from .models import Article
from .serializers import ArticleSerializer
from django.http import JsonResponse
from rest_framework.parsers import JSONParser
from rest_framework.decorators import api_view
from rest_framework.response import Response
from rest_framework import status


# Create your views here.
@api_view(['GET' , 'POST'])
def article_list(request):
    if request.method == 'GET':
        #for getting our values we will use our serializer function
        #which we created for our model and Response
        articles = Article.objects.all()
        serializer = ArticleSerializer(articles,many=True)
        return Response(serializer.data)

    elif request.method == 'POST':
        #if we are passing the data then in that case we will need to
        #just request the data if we are using our apiview along with response framework

        serializer = ArticleSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data,status = status.HTTP_201_CREATED)
        return JsonResponse(serializer.errors,status= status.HTTP_400_BAD_REQUEST)

@api_view(['GET' , 'PUT' , 'DELETE' ])
def article_details(request,pk):
    try:
        #here we are getting values for a certain id in our model
        article = Article.objects.get(pk=pk)

    except Article.DoesNotExist:
        return HttpResponse(status=status.HTTP_404_NOT_FOUND)

    if request.method == 'GET':
        serializer = ArticleSerializer(article)
        return Response(serializer.data)
    elif request.method == 'PUT':
        #changing the data for that particular id

        serializer = ArticleSerializer(article,data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors,status=status.HTTP_400_BAD_REQUEST)
    elif request.method == 'DELETE':
        #deleting the data for our id
        article.delete()
        return HttpResponse(status=status.HTTP_204_NO_CONTENT)


